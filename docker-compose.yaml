version: "3.2"
services:
  db:
    image: postgres:11
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: "poe"
      POSTGRES_USER: "poe"
      POSTGRES_DB: "poe"
  indexer:
    build: .
    command: ./wait-for-it.sh db:5432 -- bash -c "diesel setup && myapp"
    depends_on:
      - db
    restart: always
    env_file:
      - .env
    volumes:
      - "./data:/home/rust/data"
  # api:
  #   build: backend
  #   depends_on:
  #     - db
  #   restart: always
  #   stdin_open: true
  #   tty: true
  #   command: bash -c "while !</dev/tcp/db/5432; do sleep 1; done; ./manage.py runserver 0.0.0.0:8000"
  #   volumes:
  #     - ./backend:/app:ro
  #   # for janus sync
  #   environment:
  #     ADMIN_SECRET: test
  #     JANUS_SERVER: http://rtc/rtc
  # rtc:
  #   image: nginx:mainline-alpine
  #   depends_on:
  #     - janus
  #   volumes:
  #     - ./janus-docker/conf/nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./janus-docker/public:/public:ro
  # janus:
  #   image: registry.git.mayflower.de/nix/janus-docker/janus-gateway:master
  #   volumes:
  #     - ./janus-docker/conf/janus:/conf:ro
  # nginx:
  #   image: nginx:mainline-alpine
  #   depends_on:
  #     - api
  #     - landingpage
  #     - videochat
  #     - rtc
  #     - chat-backend
  #     - chat-frontend
  #   volumes:
  #     - ./scripts/nginx.conf:/etc/nginx/nginx.conf:ro
  #   ports:
  #     - 8888:80
  # landingpage:
  #   image: node:14-alpine
  #   command: npm run start
  #   user: ${UID}:${GID}
  #   working_dir: /app/landingpage
  #   restart: always
  #   stdin_open: true
  #   volumes:
  #     - ./:/app:cached
  #   depends_on:
  #     - chat-components
  #   environment:
  #     HOME: /app/.home
  #     REACT_APP_API_ROOT: http://api.live.localhost:8888
  #     REACT_APP_VIDEOCHAT_ROOT: http://videochat.live.localhost:8888
  #     REACT_APP_MOD_VIDEOCHAT_ROOT: http://mod-videochat.live.localhost:8888
  #     REACT_APP_COOKIE_DOMAIN: .live.localhost
  #     REACT_APP_SLIDO: ${DOCKER_COMPOSE_LANDINGPAGE_SLIDO}
  #     REACT_APP_CHAT_SOCKET_ROOT: ws://chat.live.localhost:8888
  # chat-components:
  #   image: node:14-alpine
  #   command: npm run start
  #   user: ${UID}:${GID}
  #   working_dir: /app/chat-components
  #   restart: always
  #   volumes:
  #     - ./:/app:cached
  #   environment:
  #     HOME: /app/.home
  # videochat:
  #   image: node:14-alpine
  #   command: npm run start
  #   user: ${UID}:${GID}
  #   working_dir: /app/videochat
  #   restart: always
  #   stdin_open: true
  #   volumes:
  #     - ./:/app:cached
  #   depends_on:
  #     - chat-components
  #   environment:
  #     HOME: /app/.home
  #     REACT_APP_API_ROOT: http://api.live.localhost:8888
  #     REACT_APP_LOGIN_URL: http://live.localhost:8888/login
  #     REACT_APP_RESERVATIONS_URL: http://live.localhost:8888/reservations
  #     REACT_APP_COOKIE_DOMAIN: .live.localhost
  #     REACT_APP_JANUS_REMOTE_HOST: rtc.live.localhost
  #     REACT_APP_JANUS_REMOTE_SCHEME: http
  #     REACT_APP_JANUS_REMOTE_PORT: 8888
  #     REACT_APP_ENABLE_MODERATOR: ''
  #     REACT_APP_CHAT_SOCKET_ROOT: ws://chat.live.localhost:8888
  # mod-videochat:
  #   image: node:14-alpine
  #   command: npm run start
  #   user: ${UID}:${GID}
  #   working_dir: /app/videochat
  #   restart: always
  #   stdin_open: true
  #   volumes:
  #     - ./:/app:cached
  #   depends_on:
  #     - chat-components
  #   environment:
  #     HOME: /app/.home
  #     REACT_APP_API_ROOT: http://api.live.localhost:8888
  #     REACT_APP_LOGIN_URL: http://live.localhost:8888/login
  #     REACT_APP_RESERVATIONS_URL: http://live.localhost:8888/reservations
  #     REACT_APP_COOKIE_DOMAIN: .live.localhost
  #     REACT_APP_JANUS_REMOTE_HOST: rtc.live.localhost
  #     REACT_APP_JANUS_REMOTE_SCHEME: http
  #     REACT_APP_JANUS_REMOTE_PORT: 8888
  #     REACT_APP_ENABLE_MODERATOR: 'true'
  #     REACT_APP_CHAT_SOCKET_ROOT: ws://chat.live.localhost:8888
  # chat-frontend:
  #   image: node:14-alpine
  #   command: npm run start
  #   user: ${UID}:${GID}
  #   working_dir: /app/chat-frontend
  #   stdin_open: true
  #   restart: always
  #   volumes:
  #     - ./:/app:cached
  #   depends_on:
  #     - chat-components
  #   environment:
  #     HOME: /app/.home
  #     REACT_APP_CHAT_SOCKET_ROOT: ws://chat.live.localhost:8888
  # chat-backend:
  #   image: elixir:1.10
  #   command: mix phx.server
  #   user: ${UID}:${GID}
  #   working_dir: /app
  #   restart: always
  #   volumes:
  #     - ./chat:/app:cached
  #   environment:
  #     HOME: /app/.docker-home
