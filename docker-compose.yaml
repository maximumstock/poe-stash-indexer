version: "3"
services:
  reverse-proxy:
    build:
      context: .
      dockerfile: reverse-proxy/Dockerfile
    env_file:
      - configuration/environments/.env.development
    ports:
      - 0.0.0.0:8888:80

  indexer:
    build:
      context: .
      dockerfile: indexer/Dockerfile
      target: development
    env_file:
      - configuration/environments/.env.development
    depends_on:
      - rabbitmq
    restart: "always"
    volumes:
      - ".:/app:cached"

  trade-ingest:
    build:
      context: .
      dockerfile: trade-ingest/Dockerfile
      target: development
    depends_on:
      - rabbitmq
      - trade-store
    restart: "always"
    env_file:
      - configuration/environments/.env.development
    volumes:
      - ".:/app:cached"

  trade-api:
    build:
      context: .
      dockerfile: trade-api/Dockerfile
      target: development
    depends_on:
      - trade-store
    restart: "always"
    env_file:
      - configuration/environments/.env.development
    volumes:
      - ".:/app:cached"

  trade-store:
    image: timescale/timescaledb:2.4.1-pg13
    env_file:
      - configuration/environments/.env.development

  rabbitmq:
    image: rabbitmq:3.9-management-alpine
    restart: "always"
    env_file:
      - configuration/environments/.env.development
    environment:
      RABBITMQ_CONFIG_FILE: "/etc/rabbitmq/rabbitmq.conf"
    volumes:
      - "./configuration/instantiated/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf"

  prometheus:
    image: prom/prometheus:latest
    restart: "always"
    env_file:
      - configuration/environments/.env.development
    volumes:
      - "./configuration/instantiated/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"

  grafana:
    image: grafana/grafana:8.1.2
    restart: "always"
    env_file:
      - configuration/environments/.env.development
    user: "root"
    volumes:
      - "grafana-store:/var/lib/grafana"
      - "./configuration/instantiated/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards"
      - "./configuration/instantiated/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources"
      - "./configuration/instantiated/grafana/custom.ini:/etc/grafana/grafana.ini"
  
  jaeger:
    image: jaegertracing/all-in-one:latest
    restart: "always"
    env_file:
      - configuration/environments/.env.development
  
  node-exporter:
    image: prom/node-exporter


volumes:
  trade-store:
  grafana-store:
