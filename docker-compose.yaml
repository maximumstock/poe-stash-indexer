version: "3"
services:
  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    depends_on:
      - grafana
      - indexer
      - prometheus
      - rabbitmq
    ports:
      - 127.0.0.1:8888:80

  db:
    image: timescale/timescaledb:2.4.1-pg13
    environment:
      POSTGRES_PASSWORD: "poe"
      POSTGRES_USER: "poe"
      POSTGRES_DB: "poe"
    volumes:
      - ./timescaledb:/var/lib/postgresql/data

  indexer:
    build:
      context: .
      dockerfile: indexer/Dockerfile
      target: development
    user: ${UID}:${GID}
    depends_on:
      - db
      - rabbitmq
    restart: "unless-stopped"
    environment:
      ENV: "development"
      DATABASE_URL: "postgres://poe:poe@db:5432/poe"
      RUST_LOG: "info,ureq=warn"
      RABBITMQ_SINK_ENABLED: "true"
      RABBITMQ_URL: "amqp://poe:poe@rabbitmq"
      RABBITMQ_PRODUCER_ROUTING_KEY: "stash-record-stream"
      METRICS_PORT: 4000
    volumes:
      - ".:/app:cached"
    healthcheck:
      test: ["CMD-SHELL", "curl", "http://indexer:4000/metrics"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3.9-management-alpine
    restart: "always"
    environment:
      RABBITMQ_CONFIG_FILE: "/etc/rabbitmq/rabbitmq.conf"
    volumes:
      - "./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf"

  prometheus:
    image: prom/prometheus:latest
    restart: "always"
    volumes:
      - "./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"

  grafana:
    image: grafana/grafana:8.1.2
    restart: "always"
    depends_on:
      - prometheus
    environment:
      GF_SECURITY_ADMIN_USER: "poe"
      GF_SECURITY_ADMIN_PASSWORD: "poe"
    volumes:
      - "./monitoring/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards"
      - "./monitoring/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources"
      - "./monitoring/grafana/custom.ini:/etc/grafana/grafana.ini"
